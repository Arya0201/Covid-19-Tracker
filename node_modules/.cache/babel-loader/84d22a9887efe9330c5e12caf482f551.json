{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Lenovo/Desktop/vscode/covid-19-tracker/Covid-19-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/Lenovo/Desktop/vscode/covid-19-tracker/Covid-19-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/Lenovo/Desktop/vscode/covid-19-tracker/Covid-19-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\vscode\\\\covid-19-tracker\\\\Covid-19-Tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { FormControl, Select, MenuItem, Card, CardContent } from \"@mui/material\";\nimport InfoBox from \"./InfoBox\";\nimport Map from \"./Map\";\nimport { sortData, prettyPrintStat } from \"./sorting\";\nimport Table from \"./Table\";\nimport LineGraph from \"./LineGraph\";\nimport \"leaflet/dist/leaflet.css\";\nimport numeral from 'numeral';\nimport Particles from \"react-tsparticles\";\nimport particlesOptions from \"./particles.json\";\nimport { v1 as uuid } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      countries = _useState2[0],\n      setCountries = _useState2[1];\n\n  var _useState3 = useState(\"worldwide\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      country = _useState4[0],\n      setCountry = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      countryInfo = _useState6[0],\n      setCountryInfo = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      tableData = _useState8[0],\n      setTableData = _useState8[1];\n\n  var _useState9 = useState({\n    lat: 34.80746,\n    lng: -40.4796\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      mapCenter = _useState10[0],\n      setMapCenter = _useState10[1];\n\n  var _useState11 = useState(3),\n      _useState12 = _slicedToArray(_useState11, 2),\n      mapZoom = _useState12[0],\n      setMapZoom = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      mapCountries = _useState14[0],\n      setMapCountries = _useState14[1];\n\n  var _useState15 = useState(\"cases\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      casesType = _useState16[0],\n      setCasesType = _useState16[1];\n\n  useEffect(function () {\n    fetch(\"https://disease.sh/v3/covid-19/all\").then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(function () {\n    var getCountriesData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"https://disease.sh/v3/covid-19/countries\").then(function (response) {\n                  return response.json();\n                }).then(function (data) {\n                  var countries = data.map(function (country) {\n                    return {\n                      name: country.country,\n                      value: country.countryInfo.iso2\n                    };\n                  });\n                  var sortedData = sortData(data);\n                  setTableData(sortedData);\n                  setMapCountries(data);\n                  setCountries(countries);\n                });\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getCountriesData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getCountriesData();\n  }, []);\n\n  var onCountryChange = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n      var countryCode, url;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              countryCode = event.target.value;\n              url = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\" : \"https://disease.sh/v3/covid-19/countries/\".concat(countryCode);\n              _context2.next = 4;\n              return fetch(url).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                setCountry(countryCode);\n                setCountryInfo(data);\n\n                if (typeof data.countryInfo !== \"undefined\") {\n                  var _data$countryInfo = data.countryInfo,\n                      lat = _data$countryInfo.lat,\n                      long = _data$countryInfo.long;\n                  setMapCenter({\n                    lat: lat,\n                    lng: long\n                  });\n                  setMapZoom(4);\n                } else {\n                  setMapCenter({\n                    lat: 34.80746,\n                    lng: -40.4796\n                  });\n                  setMapZoom(3);\n                }\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onCountryChange(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Particles, {\n      id: \"particles-js\",\n      options: particlesOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app_left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app_header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"Headerp\",\n            children: \"COVID-19 TRACKER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            className: \"app_dropdown\",\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              variant: \"outlined\",\n              onChange: onCountryChange,\n              value: country,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                className: \"worldtest\",\n                value: \"worldwide\",\n                children: \"Worldwide\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 15\n              }, this), countries.map(function (country) {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  className: \"app_dropdownItem\",\n                  value: country.value,\n                  children: country.name\n                }, uuid(), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 17\n                }, _this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 13\n            }, this)\n          }, uuid(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app_stats\",\n          children: [/*#__PURE__*/_jsxDEV(InfoBox, {\n            active: casesType === \"cases\",\n            isBlue: true,\n            onClick: function onClick(e) {\n              return setCasesType(\"cases\");\n            },\n            title: \"Coronavirus Cases\",\n            cases: prettyPrintStat(countryInfo.todayCases),\n            total: numeral(countryInfo.cases).format(\"0,0\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n            isGreen: true,\n            active: casesType === \"recovered\",\n            onClick: function onClick(e) {\n              return setCasesType(\"recovered\");\n            },\n            title: \"Recovered\",\n            cases: prettyPrintStat(countryInfo.todayRecovered),\n            total: numeral(countryInfo.recovered).format(\"0,0\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n            active: casesType === \"deaths\",\n            onClick: function onClick(e) {\n              return setCasesType(\"deaths\");\n            },\n            title: \"Deaths\",\n            cases: prettyPrintStat(countryInfo.todayDeaths),\n            total: numeral(countryInfo.deaths).format(\"0,0\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Map, {\n          casesType: casesType,\n          countries: mapCountries,\n          center: mapCenter,\n          zoom: mapZoom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: \"app_right\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"app_Tabletitle\",\n            children: \"Live Cases by Country \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            countries: tableData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"app_graphTitle\",\n            children: [\"Worldwide new \", casesType]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(LineGraph, {\n            className: \"app_graph\",\n            casesType: casesType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"b/Gh1RHKEatHrwR+Vlb591mxvxs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/vscode/covid-19-tracker/Covid-19-Tracker/src/App.js"],"names":["React","useState","useEffect","FormControl","Select","MenuItem","Card","CardContent","InfoBox","Map","sortData","prettyPrintStat","Table","LineGraph","numeral","Particles","particlesOptions","v1","uuid","App","props","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","tableData","setTableData","lat","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","casesType","setCasesType","fetch","then","response","json","data","getCountriesData","map","name","value","iso2","sortedData","onCountryChange","event","countryCode","target","url","long","e","todayCases","cases","format","todayRecovered","recovered","todayDeaths","deaths"],"mappings":"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","sourcesContent":["import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  Card,\r\n  CardContent,\r\n} from \"@mui/material\";\r\nimport InfoBox from \"./InfoBox\";\r\nimport Map from \"./Map\";\r\nimport { sortData, prettyPrintStat } from \"./sorting\";\r\nimport Table from \"./Table\";\r\nimport LineGraph from \"./LineGraph\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport numeral from 'numeral';\r\nimport Particles from \"react-tsparticles\";\r\nimport particlesOptions from \"./particles.json\";\r\nimport { v1 as uuid } from 'uuid';\r\n\r\nfunction App(props) {\r\n  const [countries, setCountries] = useState([]);\r\n  const [country, setCountry] = useState(\"worldwide\");\r\n  const [countryInfo, setCountryInfo] = useState({});\r\n  const [tableData, setTableData] = useState([]);\r\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\r\n  const [mapZoom, setMapZoom] = useState(3);\r\n  const [mapCountries, setMapCountries] = useState([]);\r\n  const [casesType, setCasesType] = useState(\"cases\");\r\n  \r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://disease.sh/v3/covid-19/all\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCountryInfo(data);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getCountriesData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const countries = data.map((country) => ({\r\n            name: country.country,\r\n            value: country.countryInfo.iso2,\r\n          }));\r\n\r\n          const sortedData = sortData(data);\r\n          setTableData(sortedData);\r\n          setMapCountries(data);\r\n          setCountries(countries);\r\n        });\r\n    };\r\n\r\n    getCountriesData();\r\n  }, []);\r\n\r\n  const onCountryChange = async (event) => {\r\n    const countryCode = event.target.value;\r\n\r\n    const url =\r\n      countryCode === \"worldwide\"\r\n        ? \"https://disease.sh/v3/covid-19/all\"\r\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\r\n\r\n    await fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setCountry(countryCode);\r\n        setCountryInfo(data);\r\n        if (typeof data.countryInfo !== \"undefined\") {\r\n          const {\r\n            countryInfo: { lat, long },\r\n          } = data;\r\n          setMapCenter({ lat, lng: long });\r\n\r\n          setMapZoom(4);\r\n        } else {\r\n          setMapCenter({ lat: 34.80746, lng: -40.4796 });\r\n          setMapZoom(3);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n     <Particles id=\"particles-js\" options={particlesOptions} />\r\n    <div className=\"app\">\r\n      <div className=\"app_left\">\r\n        <div className=\"app_header\">\r\n          <h1 className=\"Headerp\">COVID-19 TRACKER</h1>\r\n          \r\n          <FormControl key={uuid()} className=\"app_dropdown\">\r\n            <Select\r\n              variant=\"outlined\"\r\n              onChange={onCountryChange}\r\n              value={country}\r\n            >\r\n              <MenuItem className=\"worldtest\" value=\"worldwide\">Worldwide</MenuItem>\r\n              {countries.map((country) => (\r\n                <MenuItem  key={uuid()} className=\"app_dropdownItem\" value={country.value}>{country.name}</MenuItem>\r\n                \r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n\r\n        <div className=\"app_stats\">\r\n          <InfoBox\r\n           active={casesType === \"cases\"}\r\n           isBlue\r\n            onClick={(e) => setCasesType(\"cases\")}\r\n            title=\"Coronavirus Cases\"\r\n            cases={prettyPrintStat(countryInfo.todayCases)}\r\n            total={numeral(countryInfo.cases).format(\"0,0\")}\r\n          />\r\n          <InfoBox\r\n          isGreen\r\n          active={casesType === \"recovered\"}\r\n            onClick={(e) => setCasesType(\"recovered\")}\r\n            title=\"Recovered\"\r\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\r\n            total={numeral(countryInfo.recovered).format(\"0,0\")}\r\n          />\r\n          <InfoBox\r\n          active={casesType === \"deaths\"}\r\n            onClick={(e) => setCasesType(\"deaths\")}\r\n            title=\"Deaths\"\r\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\r\n            total={numeral(countryInfo.deaths).format(\"0,0\")}\r\n          />\r\n        </div><br/>\r\n       \r\n        <Map \r\n        casesType={casesType}\r\n        countries={mapCountries} \r\n        center={mapCenter} \r\n        zoom={mapZoom} />\r\n      </div>\r\n      <Card className=\"app_right\">\r\n        <CardContent>\r\n          <h3 className=\"app_Tabletitle\">Live Cases by Country </h3>\r\n          <Table countries={tableData} />\r\n          <h3 className=\"app_graphTitle\">Worldwide new {casesType}</h3>\r\n          <LineGraph  className=\"app_graph\" casesType ={casesType} />\r\n        </CardContent>\r\n      </Card>\r\n     \r\n    </div>\r\n    </>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}