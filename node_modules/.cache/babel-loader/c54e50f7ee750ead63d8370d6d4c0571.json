{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Lenovo/Desktop/vscode/covid-19-tracker/Covid-19-Tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from'react';import numeral from'numeral';import{Circle,Popup}from'react-leaflet';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var casesTypeColors={cases:{multiplier:800,option:{color:'#4351ba',fillColor:'#4351ba'}},recovered:{multiplier:1200,option:{color:'#7dd71d',fillColor:'#7dd71d'}},deaths:{multiplier:2000,option:{color:'#ff0000',fillColor:'#ff0000'}}};export var sortData=function sortData(data){var sortedData=_toConsumableArray(data);// if else method =>\n// sortedData.sort((a,b) => {\n//     if(a.cases > b.cases){\n//         return -1;\n//     }else{\n//         return 1;\n//     }\n// });\n// return sortedData\n// oprators method =>\nreturn sortedData.sort(function(a,b){return a.cases>b.cases?-1:1;});};export var prettyPrintStat=function prettyPrintStat(stat){return stat?\"+\".concat(numeral(stat).format(\"0.0a\")):\"+0\";};export var prettyPrintStat2=function prettyPrintStat2(stat){return stat?\"\".concat(numeral(stat).format(\"0.0 a\")):\"0\";};export var showDataOnMap=function showDataOnMap(data){var casesType=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'cases';return data.map(function(country){return/*#__PURE__*/_jsx(Circle,{center:[country.countryInfo.lat,country.countryInfo.long],pathOptions:casesTypeColors[casesType].option,fillOpacity:0.4,radius:Math.cbrt(country[casesType])*4*casesTypeColors[casesType].multiplier,children:/*#__PURE__*/_jsx(Popup,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"info-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"info-flag\",style:{backgroundImage:\"url(\".concat(country.countryInfo.flag,\")\")}}),/*#__PURE__*/_jsx(\"div\",{className:\"info-name\",children:country.country}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-confirmed\",children:[\"Cases: \",numeral(country.cases).format(\"0,0\")]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-recovered\",children:[\"Recovered: \",numeral(country.recovered).format(\"0,0\")]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-deaths\",children:[\"Deaths: \",numeral(country.deaths).format(\"0,0\")]})]})})});});};","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/vscode/covid-19-tracker/Covid-19-Tracker/src/sorting.js"],"names":["React","numeral","Circle","Popup","casesTypeColors","cases","multiplier","option","color","fillColor","recovered","deaths","sortData","data","sortedData","sort","a","b","prettyPrintStat","stat","format","prettyPrintStat2","showDataOnMap","casesType","map","country","countryInfo","lat","long","Math","cbrt","backgroundImage","flag"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport numeral from 'numeral';\r\nimport { Circle, Popup } from 'react-leaflet';\r\n\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    multiplier: 800,\r\n    option: { color: '#4351ba', fillColor: '#4351ba' },\r\n  },\r\n  recovered: {\r\n    multiplier: 1200,\r\n    option: { color: '#7dd71d', fillColor: '#7dd71d' },\r\n  },\r\n  deaths: {\r\n    multiplier: 2000,\r\n    option: { color: '#ff0000', fillColor: '#ff0000' },\r\n  },\r\n};\r\n\r\nexport const sortData = (data) => {\r\n    const sortedData = [...data];\r\n\r\n\r\n    // if else method =>\r\n\r\n    // sortedData.sort((a,b) => {\r\n    //     if(a.cases > b.cases){\r\n    //         return -1;\r\n    //     }else{\r\n    //         return 1;\r\n    //     }\r\n    // });\r\n    // return sortedData\r\n\r\n\r\n    // oprators method =>\r\n\r\n    return sortedData.sort((a,b)=>(a.cases > b.cases ? -1 : 1));\r\n};\r\n\r\nexport const prettyPrintStat = (stat) =>\r\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n\r\nexport const prettyPrintStat2 = (stat) =>\r\n  stat ? `${numeral(stat).format(\"0.0 a\")}` : \"0\";\r\n\r\nexport const showDataOnMap = (data, casesType = 'cases') =>\r\n  data.map((country) => (\r\n    <Circle\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      pathOptions={casesTypeColors[casesType].option}\r\n    fillOpacity={0.4}\r\n      radius={\r\n        Math.cbrt(country[casesType]) *4*(casesTypeColors[casesType].multiplier)\r\n      }\r\n    >\r\n    <Popup>\r\n    <div className=\"info-container\">\r\n          <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n          ></div>\r\n          <div className=\"info-name\">{country.country}</div>\r\n          <div className=\"info-confirmed\">\r\n            Cases: {numeral(country.cases).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-recovered\">\r\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n          </div>\r\n        </div>\r\n    </Popup>\r\n    </Circle>\r\n  ));\r\n\r\n"]},"metadata":{},"sourceType":"module"}